# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...commons.types.entity_id import EntityId
from ...core.serialization import FieldMetadata
import pydantic
import datetime as dt
from .agent_environment import AgentEnvironment
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class Agent(UniversalBaseModel):
    agent_id: typing_extensions.Annotated[EntityId, FieldMetadata(alias="agentId")] = pydantic.Field()
    """
    ID that uniquely identifies this action
    """

    name: str = pydantic.Field()
    """
    The name of the agent.
    """

    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")] = pydantic.Field()
    """
    When the agent was created.
    """

    environment: AgentEnvironment = pydantic.Field()
    """
    The environment of the agent. Default is `DEMO`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
